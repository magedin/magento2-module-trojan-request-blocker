<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2025 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\TrojanRequestBlocker\Service;

use MagedIn\TrojanRequestBlocker\Service\Patterns\PatternsInterface;
use Magento\Framework\Exception\LocalizedException;

/**
 * DocBlock for AdditionalPatternsLoader class.
 */
class PatternsLoader implements PatternsInterface
{
    /**
     * @var array
     */
    private array $patterns;

    /**
     * @var PatternsInterface[]
     */
    private array $loaders;

    /**
     * @param array $patterns
     * @param array $loaders
     */
    public function __construct(
        array $patterns = [],
        array $loaders = []
    ) {
        $this->patterns = $patterns;
        $this->loaders = $loaders;
    }

    /**
     * @inheritDoc
     * @throws LocalizedException
     */
    public function load(): array
    {
        if ($this->patterns) {
            return $this->patterns;
        }
        /** @var PatternsInterface $loader */
        foreach ($this->loaders as $loader) {
            if (!$loader instanceof PatternsInterface) {
                throw new LocalizedException(
                    __('The loader must be an implementation of %1', PatternsInterface::class)
                );
            }
            $this->patterns = array_merge($this->patterns, $loader->load());
        }
        return $this->patterns;
    }
}
